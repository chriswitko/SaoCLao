{"ast":null,"code":"import \"antd/lib/spin/style/css\";\nimport _Spin from \"antd/lib/spin\";\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\WebstormProjects\\\\nextjs\\\\SoundCloudClone\\\\src\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { myApiEndPoint } from '../constants/myApi.constant';\nimport TrackList from '../components/Track/TrackList';\nimport { TrackItemContainer } from '../components/Track/TrackItem.container';\nimport { usePublicTracks } from '../hooks/track/usePublicTracks';\nimport TrackListHeader from '../components/Track/TrackListHeader';\nimport { isBrowser } from '../helpers/utils.helper';\nexport default function Index() {\n  const {\n    trendingTracks,\n    loadMore,\n    hasMore\n  } = usePublicTracks(myApiEndPoint.TRENDING_TRACKS, 10);\n  return isBrowser && __jsx(\"div\", {\n    className: \"px-4 pt-16 bg-grey-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(TrackListHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), __jsx(InfiniteScroll, {\n    initialLoad: false // have to set up false then use useEffectOnce in hook. There is some bug with true state\n    ,\n    pageStart: 0,\n    loadMore: loadMore,\n    hasMore: hasMore,\n    loader: __jsx(_Spin, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(TrackList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, trendingTracks.map((track, i) => __jsx(TrackItemContainer, {\n    key: track.id,\n    track: track,\n    numericalOrder: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["C:/Users/PC/WebstormProjects/nextjs/SoundCloudClone/src/pages/index.js"],"names":["React","InfiniteScroll","myApiEndPoint","TrackList","TrackItemContainer","usePublicTracks","TrackListHeader","isBrowser","Index","trendingTracks","loadMore","hasMore","TRENDING_TRACKS","map","track","i","id"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAASC,kBAAT,QAAmC,yCAAnC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,eAAP,MAA4B,qCAA5B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA,QAAlB;AAA4BC,IAAAA;AAA5B,MAAwCN,eAAe,CAC3DH,aAAa,CAACU,eAD6C,EAE3D,EAF2D,CAA7D;AAKA,SACEL,SAAS,IACP;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,cAAD;AACE,IAAA,WAAW,EAAE,KADf,CACsB;AADtB;AAEE,IAAA,SAAS,EAAE,CAFb;AAGE,IAAA,QAAQ,EAAEG,QAHZ;AAIE,IAAA,OAAO,EAAEC,OAJX;AAKE,IAAA,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,cAAc,CAACI,GAAf,CAAmB,CAACC,KAAD,EAAQC,CAAR,KAClB,MAAC,kBAAD;AAAoB,IAAA,GAAG,EAAED,KAAK,CAACE,EAA/B;AAAmC,IAAA,KAAK,EAAEF,KAA1C;AAAiD,IAAA,cAAc,EAAEC,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAPF,CAFF,CAFJ;AAoBD","sourcesContent":["import React from 'react';\nimport { Spin } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { myApiEndPoint } from '../constants/myApi.constant';\nimport TrackList from '../components/Track/TrackList';\nimport { TrackItemContainer } from '../components/Track/TrackItem.container';\nimport { usePublicTracks } from '../hooks/track/usePublicTracks';\nimport TrackListHeader from '../components/Track/TrackListHeader';\nimport { isBrowser } from '../helpers/utils.helper';\n\nexport default function Index() {\n  const { trendingTracks, loadMore, hasMore } = usePublicTracks(\n    myApiEndPoint.TRENDING_TRACKS,\n    10,\n  );\n\n  return (\n    isBrowser && (\n      <div className=\"px-4 pt-16 bg-grey-100\">\n        <TrackListHeader />\n        <InfiniteScroll\n          initialLoad={false} // have to set up false then use useEffectOnce in hook. There is some bug with true state\n          pageStart={0}\n          loadMore={loadMore}\n          hasMore={hasMore}\n          loader={<Spin />}\n        >\n          <TrackList>\n            {trendingTracks.map((track, i) => (\n              <TrackItemContainer key={track.id} track={track} numericalOrder={i} />\n            ))}\n          </TrackList>\n        </InfiniteScroll>\n      </div>\n    )\n  );\n}\n"]},"metadata":{},"sourceType":"module"}