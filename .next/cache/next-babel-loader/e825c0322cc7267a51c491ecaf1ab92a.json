{"ast":null,"code":"import \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/checkbox/style/css\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport \"antd/lib/form/style/css\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/icon/style/css\";\nimport _Icon from \"antd/lib/icon\";\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\WebstormProjects\\\\nextjs\\\\SoundCloudClone\\\\src\\\\components\\\\Common\\\\Login.modal.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { RHFInput } from 'react-hook-form-input';\nimport Register from './Register';\nimport { useSigninAccount } from '../../hooks/user/useSignInAccount';\nexport default function LoginModal() {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setValue,\n    reset\n  } = useForm();\n  const {\n    loading,\n    signinAccount\n  } = useSigninAccount();\n\n  const onSubmit = data => signinAccount(data);\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(_Form, {\n    onSubmit: handleSubmit(onSubmit),\n    className: \" p-4 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(_Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(RHFInput, {\n    as: __jsx(_Input, {\n      prefix: __jsx(_Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }),\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }),\n    rules: {\n      required: {\n        value: true,\n        message: 'Please Type An Email'\n      },\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: 'invalid email address'\n      }\n    },\n    name: \"email\",\n    register: register,\n    setValue: setValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), errors.email && errors.email.message), __jsx(_Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(RHFInput, {\n    as: __jsx(_Input.Password, {\n      prefix: __jsx(_Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"input password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }),\n    rules: {\n      required: {\n        value: true,\n        message: 'Please Type A Password'\n      }\n    },\n    name: \"password\",\n    register: register,\n    setValue: setValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), errors.password && errors.password.message), __jsx(_Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \" flex justify-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(_Checkbox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Remember me\"), __jsx(\"a\", {\n    className: \"login-form-forgot\",\n    href: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Forgot password\")), __jsx(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \" w-full\",\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Log in\"), \"Or\", ' ', __jsx(Register, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["C:/Users/PC/WebstormProjects/nextjs/SoundCloudClone/src/components/Common/Login.modal.js"],"names":["React","useForm","RHFInput","Register","useSigninAccount","LoginModal","register","handleSubmit","errors","setValue","reset","loading","signinAccount","onSubmit","data","color","required","value","message","pattern","email","password"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport {\n  Form, Icon, Input, Button, Checkbox,\n} from 'antd';\nimport { RHFInput } from 'react-hook-form-input';\nimport Register from './Register';\nimport { useSigninAccount } from '../../hooks/user/useSignInAccount';\n\nexport default function LoginModal() {\n  const {\n    register, handleSubmit, errors, setValue, reset,\n  } = useForm();\n  const { loading, signinAccount } = useSigninAccount();\n  const onSubmit = (data) => signinAccount(data);\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit(onSubmit)} className=\" p-4 \">\n        <Form.Item>\n          <RHFInput\n            as={(\n              <Input\n                prefix={\n                  <Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                }\n                placeholder=\"Email\"\n              />\n            )}\n            rules={{\n              required: { value: true, message: 'Please Type An Email' },\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                message: 'invalid email address',\n              },\n            }}\n            name=\"email\"\n            register={register}\n            setValue={setValue}\n          />\n          {errors.email && errors.email.message}\n        </Form.Item>\n        <Form.Item>\n          <RHFInput\n            as={(\n              <Input.Password\n                prefix={\n                  <Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                }\n                type=\"password\"\n                placeholder=\"input password\"\n              />\n            )}\n            rules={{\n              required: { value: true, message: 'Please Type A Password' },\n            }}\n            name=\"password\"\n            register={register}\n            setValue={setValue}\n          />\n          {errors.password && errors.password.message}\n        </Form.Item>\n        <Form.Item>\n          <div className=\" flex justify-between\">\n            <Checkbox>Remember me</Checkbox>\n            <a className=\"login-form-forgot\" href=\"\">\n              Forgot password\n            </a>\n          </div>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\" w-full\"\n            loading={loading}\n          >\n            Log in\n          </Button>\n          Or\n          {' '}\n          <Register />\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}