{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport \"antd/lib/message/style/css\";\nimport _message from \"antd/lib/message\";\nimport _ from \"lodash\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport { myApiEndPoint, myApiAxiosInstance } from \"../../constants/myApi.constant\";\nimport { errorSelector } from \"../../helpers/utils.helper\";\nimport { useTrendingTracks, useAddTrendingTracks } from \"../../contexts/TrackContext\";\nexport var usePublicTracks = function usePublicTracks(endpoint, limit) {\n  var trendingTracks = useTrendingTracks();\n  var addTrendingTracks = useAddTrendingTracks();\n\n  var _useState = useState(\"\"),\n      offset = _useState[0],\n      setOffset = _useState[1];\n\n  var _useState2 = useState(true),\n      hasMore = _useState2[0],\n      setHasMore = _useState2[1];\n\n  var loadMore = function loadMore(params) {\n    var res;\n    return _regeneratorRuntime.async(function loadMore$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (hasMore) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(myApiAxiosInstance.get(endpoint, {\n              params: {\n                limit: limit,\n                lastVisible: offset\n              }\n            }));\n\n          case 5:\n            res = _context.sent;\n            if (res.data.lastVisible == \"end\") setHasMore(false);\n            addTrendingTracks(res.data.collection);\n            setOffset(res.data.lastVisible);\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](2);\n\n            _message.error(errorSelector(_context.t0));\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 11]]);\n  };\n\n  useEffect(function () {\n    loadMore();\n  }, []);\n  return {\n    trendingTracks: trendingTracks,\n    loadMore: loadMore,\n    hasMore: hasMore\n  };\n};","map":null,"metadata":{},"sourceType":"module"}