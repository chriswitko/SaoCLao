{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useHover } from 'react-use';\nimport classNames from 'classnames';\nimport { TrackItemLikesCount } from './TrackItemLikesCount';\nimport { TrackItemHeart } from './TrackItemHeart';\nimport { TrackItemAvatarAndButtonPlay } from './TrackItemAvatarAndButtonPlay';\nimport { useIsCurrentTrackPlaying } from '../../contexts/MusicPlayerContext';\nexport const TrackItemContainer = React.memo(({\n  track,\n  numericalOrder\n}) => {\n  const element = hovered => __jsx(\"div\", {\n    className: classNames('p-1 flex justify-between items-center hover:bg-gray-200', {\n      'bg-gray-200': isPlaying\n    })\n  }, __jsx(\"div\", {\n    className: \" font-semibold text-lg w-10\"\n  }, numericalOrder), __jsx(TrackItemAvatarAndButtonPlay, {\n    track: track,\n    hovered: hovered\n  }), __jsx(\"div\", {\n    className: \" flex-1\"\n  }, __jsx(\"div\", {\n    className: \"\"\n  }, track.artist), __jsx(\"h2\", null, track.name)), __jsx(TrackItemLikesCount, {\n    track: track\n  }), __jsx(TrackItemHeart, {\n    track: track\n  }));\n\n  const checkIsPlaying = useIsCurrentTrackPlaying();\n  const isPlaying = checkIsPlaying(track.id); // this line has to be placed before useHover, so it can pass isPlaying variable to element\n\n  const [hoverable] = useHover(element);\n  return __jsx(\"div\", null, hoverable);\n});","map":null,"metadata":{},"sourceType":"module"}