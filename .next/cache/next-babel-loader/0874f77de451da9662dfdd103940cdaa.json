{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport \"antd/lib/message/style/css\";\nimport _message from \"antd/lib/message\";\nimport { useEffect, useState } from \"react\";\nimport { myApiEndPoint, myApiAxiosInstance } from \"../../constants/myApi.constant\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { useAddFavoriteTrackIds } from \"../../contexts/TrackContext\";\nimport { errorSelector } from \"../../helpers/utils.helper\";\nimport { localStorageService } from \"../../helpers/storage.helper\";\nexport var useFetchFavoriteTrackIds = function useFetchFavoriteTrackIds() {\n  var addFavoriteTrackIds = useAddFavoriteTrackIds();\n\n  var _useAuth = useAuth(),\n      refreshToken = _useAuth.refreshToken;\n\n  useEffect(function () {\n    var fetchFavoriteTrackIds = function fetchFavoriteTrackIds(params) {\n      var res;\n      return _regeneratorRuntime.async(function fetchFavoriteTrackIds$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(myApiAxiosInstance.get(myApiEndPoint.FAVORITE_TRACK_IDS));\n\n            case 3:\n              res = _context.sent;\n              addFavoriteTrackIds(res.data);\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n\n              _message.error(errorSelector(_context.t0));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    };\n\n    if (!refreshToken) return; // false mean firebase haven't release token, so throw unauthorized error\n\n    fetchFavoriteTrackIds();\n  }, [refreshToken]);\n};","map":null,"metadata":{},"sourceType":"module"}