{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\WebstormProjects\\\\nextjs\\\\SoundCloudClone\\\\src\\\\components\\\\Track\\\\TrackItem.container.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useHover } from 'react-use';\nimport classNames from 'classnames';\nimport { TrackItemLikesCount } from './TrackItemLikesCount';\nimport { TrackItemHeart } from './TrackItemHeart';\nimport { TrackItemAvatarAndButtonPlay } from './TrackItemAvatarAndButtonPlay';\nimport { useIsCurrentTrackPlaying } from '../../contexts/MusicPlayerContext';\nexport var TrackItemContainer = React.memo(function (_ref) {\n  var track = _ref.track,\n      numericalOrder = _ref.numericalOrder;\n\n  var element = function element(hovered) {\n    return __jsx(\"div\", {\n      className: classNames('p-1 flex justify-between items-center hover:bg-gray-200', {\n        'bg-gray-200': isPlaying\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \" font-semibold text-lg w-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, numericalOrder), __jsx(TrackItemAvatarAndButtonPlay, {\n      track: track,\n      hovered: hovered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \" flex-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, track.artist), __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, track.name)), __jsx(TrackItemLikesCount, {\n      track: track,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), __jsx(TrackItemHeart, {\n      track: track,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  };\n\n  var checkIsPlaying = useIsCurrentTrackPlaying();\n  var isPlaying = checkIsPlaying(track.id); // this line has to be placed before useHover, so it can pass isPlaying variable to element\n\n  var _useHover = useHover(element),\n      _useHover2 = _slicedToArray(_useHover, 1),\n      hoverable = _useHover2[0];\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, hoverable);\n});","map":{"version":3,"sources":["C:/Users/PC/WebstormProjects/nextjs/SoundCloudClone/src/components/Track/TrackItem.container.js"],"names":["React","useState","useEffect","useHover","classNames","TrackItemLikesCount","TrackItemHeart","TrackItemAvatarAndButtonPlay","useIsCurrentTrackPlaying","TrackItemContainer","memo","track","numericalOrder","element","hovered","isPlaying","artist","name","checkIsPlaying","id","hoverable"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,4BAAT,QAA6C,gCAA7C;AACA,SAASC,wBAAT,QAAyC,mCAAzC;AAEA,OAAO,IAAMC,kBAAkB,GAAGT,KAAK,CAACU,IAAN,CAAW,gBAA+B;AAAA,MAA5BC,KAA4B,QAA5BA,KAA4B;AAAA,MAArBC,cAAqB,QAArBA,cAAqB;;AAC1E,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,OAAD;AAAA,WACd;AACE,MAAA,SAAS,EAAEV,UAAU,CACnB,yDADmB,EAEnB;AAAE,uBAAeW;AAAjB,OAFmB,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8CH,cAA9C,CANF,EAQE,MAAC,4BAAD;AAA8B,MAAA,KAAK,EAAED,KAArC;AAA4C,MAAA,OAAO,EAAEG,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAUE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBH,KAAK,CAACK,MAAzB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,KAAK,CAACM,IAAX,CAFF,CAVF,EAeE,MAAC,mBAAD;AAAqB,MAAA,KAAK,EAAEN,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,EAgBE,MAAC,cAAD;AAAgB,MAAA,KAAK,EAAEA,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CADc;AAAA,GAAhB;;AAqBA,MAAMO,cAAc,GAAGV,wBAAwB,EAA/C;AACA,MAAMO,SAAS,GAAGG,cAAc,CAACP,KAAK,CAACQ,EAAP,CAAhC,CAvB0E,CAuB9B;;AAvB8B,kBAwBtDhB,QAAQ,CAACU,OAAD,CAxB8C;AAAA;AAAA,MAwBnEO,SAxBmE;;AA0B1E,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,SAAN,CAAP;AACD,CA3BiC,CAA3B","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Avatar, Icon } from 'antd';\nimport { useHover } from 'react-use';\nimport classNames from 'classnames';\nimport { TrackItemLikesCount } from './TrackItemLikesCount';\nimport { TrackItemHeart } from './TrackItemHeart';\nimport { TrackItemAvatarAndButtonPlay } from './TrackItemAvatarAndButtonPlay';\nimport { useIsCurrentTrackPlaying } from '../../contexts/MusicPlayerContext';\n\nexport const TrackItemContainer = React.memo(({ track, numericalOrder }) => {\n  const element = (hovered) => (\n    <div\n      className={classNames(\n        'p-1 flex justify-between items-center hover:bg-gray-200',\n        { 'bg-gray-200': isPlaying },\n      )}\n    >\n      <div className=\" font-semibold text-lg w-10\">{numericalOrder}</div>\n\n      <TrackItemAvatarAndButtonPlay track={track} hovered={hovered} />\n\n      <div className=\" flex-1\">\n        <div className=\"\">{track.artist}</div>\n        <h2>{track.name}</h2>\n      </div>\n\n      <TrackItemLikesCount track={track} />\n      <TrackItemHeart track={track} />\n    </div>\n  );\n\n  const checkIsPlaying = useIsCurrentTrackPlaying();\n  const isPlaying = checkIsPlaying(track.id); // this line has to be placed before useHover, so it can pass isPlaying variable to element\n  const [hoverable] = useHover(element);\n\n  return <div>{hoverable}</div>;\n});\n"]},"metadata":{},"sourceType":"module"}