{"ast":null,"code":"import { isBrowser } from './utils.helper';\n\nvar getToken = function getToken(params) {\n  if (isBrowser) {\n    var token = localStorage.getItem('token_access') || '';\n    return token.replace(/\\\\\"/g, '\"');\n  }\n};\n\nvar setToken = function setToken(token) {\n  if (isBrowser) {\n    localStorage.setItem('token_access', token);\n  }\n};\n\nvar removeToken = function removeToken() {\n  if (isBrowser) {\n    localStorage.removeItem('token_access');\n  }\n};\n\nexport var localStorageService = {\n  token: getToken(),\n  setToken: setToken,\n  removeToken: removeToken,\n  getToken: getToken\n};","map":{"version":3,"sources":["C:/Users/PC/WebstormProjects/nextjs/SoundCloudClone/src/helpers/storage.helper.js"],"names":["isBrowser","getToken","params","token","localStorage","getItem","replace","setToken","setItem","removeToken","removeItem","localStorageService"],"mappings":"AAAA,SAASA,SAAT,QAA0B,gBAA1B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,MAAD,EAAY;AAC3B,MAAIF,SAAJ,EAAe;AACb,QAAMG,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,KAAwC,EAAtD;AACA,WAAOF,KAAK,CAACG,OAAN,CAAc,MAAd,EAAsB,GAAtB,CAAP;AACD;AACF,CALD;;AAOA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACJ,KAAD,EAAW;AAC1B,MAAIH,SAAJ,EAAe;AACbI,IAAAA,YAAY,CAACI,OAAb,CAAqB,cAArB,EAAqCL,KAArC;AACD;AACF,CAJD;;AAMA,IAAMM,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,MAAIT,SAAJ,EAAe;AACbI,IAAAA,YAAY,CAACM,UAAb,CAAwB,cAAxB;AACD;AACF,CAJD;;AAMA,OAAO,IAAMC,mBAAmB,GAAG;AACjCR,EAAAA,KAAK,EAAEF,QAAQ,EADkB;AAEjCM,EAAAA,QAAQ,EAARA,QAFiC;AAGjCE,EAAAA,WAAW,EAAXA,WAHiC;AAIjCR,EAAAA,QAAQ,EAARA;AAJiC,CAA5B","sourcesContent":["import { isBrowser } from './utils.helper';\n\nconst getToken = (params) => {\n  if (isBrowser) {\n    const token = localStorage.getItem('token_access') || '';\n    return token.replace(/\\\\\"/g, '\"');\n  }\n};\n\nconst setToken = (token) => {\n  if (isBrowser) {\n    localStorage.setItem('token_access', token);\n  }\n};\n\nconst removeToken = () => {\n  if (isBrowser) {\n    localStorage.removeItem('token_access');\n  }\n};\n\nexport const localStorageService = {\n  token: getToken(),\n  setToken,\n  removeToken,\n  getToken,\n};\n"]},"metadata":{},"sourceType":"module"}