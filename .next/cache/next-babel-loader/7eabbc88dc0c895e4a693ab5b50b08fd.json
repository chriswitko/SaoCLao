{"ast":null,"code":"import \"antd/lib/message/style/css\";\nimport _message from \"antd/lib/message\";\nimport _ from \"lodash\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport { myApiEndPoint, myApiAxiosInstance } from \"../../constants/myApi.constant\";\nimport { errorSelector } from \"../../helpers/utils.helper\";\nimport { useTrendingTracks, useAddTrendingTracks } from \"../../contexts/TrackContext\";\nexport const usePublicTracks = (endpoint, limit) => {\n  const trendingTracks = useTrendingTracks();\n  const addTrendingTracks = useAddTrendingTracks();\n  const {\n    0: offset,\n    1: setOffset\n  } = useState(\"\");\n  const {\n    0: hasMore,\n    1: setHasMore\n  } = useState(true);\n\n  const loadMore = async params => {\n    if (!hasMore) {\n      return;\n    }\n\n    try {\n      const res = await myApiAxiosInstance.get(endpoint, {\n        params: {\n          limit,\n          lastVisible: offset\n        }\n      });\n      if (res.data.lastVisible == \"end\") setHasMore(false);\n      addTrendingTracks(res.data.collection);\n      setOffset(res.data.lastVisible);\n    } catch (error) {\n      _message.error(errorSelector(error));\n    }\n  };\n\n  useEffect(() => {\n    loadMore();\n  }, []);\n  return {\n    trendingTracks,\n    loadMore,\n    hasMore\n  };\n};","map":{"version":3,"sources":["C:/Users/PC/WebstormProjects/nextjs/SoundCloudClone/src/hooks/track/usePublicTracks.js"],"names":["_","useState","useEffect","useMemo","myApiEndPoint","myApiAxiosInstance","errorSelector","useTrendingTracks","useAddTrendingTracks","usePublicTracks","endpoint","limit","trendingTracks","addTrendingTracks","offset","setOffset","hasMore","setHasMore","loadMore","params","res","get","lastVisible","data","collection","error"],"mappings":";;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,OAA9B,QAA6C,OAA7C;AAEA,SACEC,aADF,EAEEC,kBAFF,QAGO,gCAHP;AAIA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SACEC,iBADF,EAEEC,oBAFF,QAGO,6BAHP;AAKA,OAAO,MAAMC,eAAe,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAClD,QAAMC,cAAc,GAAGL,iBAAiB,EAAxC;AACA,QAAMM,iBAAiB,GAAGL,oBAAoB,EAA9C;AACA,QAAM;AAAA,OAACM,MAAD;AAAA,OAASC;AAAT,MAAsBd,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACe,OAAD;AAAA,OAAUC;AAAV,MAAwBhB,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMiB,QAAQ,GAAG,MAAMC,MAAN,IAAgB;AAC/B,QAAI,CAACH,OAAL,EAAc;AACZ;AACD;;AACD,QAAI;AACF,YAAMI,GAAG,GAAG,MAAMf,kBAAkB,CAACgB,GAAnB,CAAuBX,QAAvB,EAAiC;AACjDS,QAAAA,MAAM,EAAE;AACNR,UAAAA,KADM;AAENW,UAAAA,WAAW,EAAER;AAFP;AADyC,OAAjC,CAAlB;AAMA,UAAIM,GAAG,CAACG,IAAJ,CAASD,WAAT,IAAwB,KAA5B,EAAmCL,UAAU,CAAC,KAAD,CAAV;AACnCJ,MAAAA,iBAAiB,CAACO,GAAG,CAACG,IAAJ,CAASC,UAAV,CAAjB;AACAT,MAAAA,SAAS,CAACK,GAAG,CAACG,IAAJ,CAASD,WAAV,CAAT;AACD,KAVD,CAUE,OAAOG,KAAP,EAAc;AACd,eAAQA,KAAR,CAAcnB,aAAa,CAACmB,KAAD,CAA3B;AACD;AACF,GAjBD;;AAmBAvB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO;AACLN,IAAAA,cADK;AAELM,IAAAA,QAFK;AAGLF,IAAAA;AAHK,GAAP;AAKD,CAlCM","sourcesContent":["import _ from \"lodash\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport { message } from \"antd\";\nimport {\n  myApiEndPoint,\n  myApiAxiosInstance\n} from \"../../constants/myApi.constant\";\nimport { errorSelector } from \"../../helpers/utils.helper\";\nimport {\n  useTrendingTracks,\n  useAddTrendingTracks\n} from \"../../contexts/TrackContext\";\n\nexport const usePublicTracks = (endpoint, limit) => {\n  const trendingTracks = useTrendingTracks();\n  const addTrendingTracks = useAddTrendingTracks();\n  const [offset, setOffset] = useState(\"\");\n  const [hasMore, setHasMore] = useState(true);\n\n  const loadMore = async params => {\n    if (!hasMore) {\n      return;\n    }\n    try {\n      const res = await myApiAxiosInstance.get(endpoint, {\n        params: {\n          limit,\n          lastVisible: offset\n        }\n      });\n      if (res.data.lastVisible == \"end\") setHasMore(false);\n      addTrendingTracks(res.data.collection);\n      setOffset(res.data.lastVisible);\n    } catch (error) {\n      message.error(errorSelector(error));\n    }\n  };\n\n  useEffect(() => {\n    loadMore();\n  }, []);\n\n  return {\n    trendingTracks,\n    loadMore,\n    hasMore\n  };\n};\n"]},"metadata":{},"sourceType":"module"}