{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport \"antd/lib/message/style/css\";\nimport _message from \"antd/lib/message\";\n\n/* eslint-disable import/prefer-default-export */\nimport { useState, useCallback } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { messages } from '../../constants/message.constant';\nexport var useSigninAccount = function useSigninAccount() {\n  var _useAuth = useAuth(),\n      loginWithEmail = _useAuth.loginWithEmail;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var signinAccount = useCallback(function _callee(data) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setLoading(true);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(loginWithEmail(data.email, data.password));\n\n          case 4:\n            setLoading(false);\n            _context.next = 11;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            setLoading(false);\n\n            _message.error(messages.INCORRECT_USERNAME_PASSWORD_ERROR);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]]);\n  }, []);\n  return {\n    signinAccount: signinAccount,\n    loading: loading\n  };\n};","map":{"version":3,"sources":["C:/Users/PC/WebstormProjects/nextjs/SoundCloudClone/src/hooks/user/useSignInAccount.js"],"names":["useState","useCallback","useAuth","messages","useSigninAccount","loginWithEmail","loading","setLoading","signinAccount","data","email","password","error","INCORRECT_USERNAME_PASSWORD_ERROR"],"mappings":";;;;AAAA;AACA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AAEA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,QAAT,QAAyB,kCAAzB;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA,iBACTF,OAAO,EADE;AAAA,MAC5BG,cAD4B,YAC5BA,cAD4B;;AAAA,kBAENL,QAAQ,CAAC,KAAD,CAFF;AAAA,MAE7BM,OAF6B;AAAA,MAEpBC,UAFoB;;AAIpC,MAAMC,aAAa,GAAGP,WAAW,CAAC,iBAAOQ,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAE9BF,YAAAA,UAAU,CAAC,IAAD,CAAV;AAF8B;AAAA,6CAGxBF,cAAc,CAACI,IAAI,CAACC,KAAN,EAAaD,IAAI,CAACE,QAAlB,CAHU;;AAAA;AAI9BJ,YAAAA,UAAU,CAAC,KAAD,CAAV;AAJ8B;AAAA;;AAAA;AAAA;AAAA;AAM9BA,YAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,qBAAQK,KAAR,CAAcT,QAAQ,CAACU,iCAAvB;;AAP8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAS9B,EAT8B,CAAjC;AAUA,SAAO;AAAEL,IAAAA,aAAa,EAAbA,aAAF;AAAiBF,IAAAA,OAAO,EAAPA;AAAjB,GAAP;AACD,CAfM","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport { useState, useCallback } from 'react';\nimport { message } from 'antd';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { messages } from '../../constants/message.constant';\n\nexport const useSigninAccount = () => {\n  const { loginWithEmail } = useAuth();\n  const [loading, setLoading] = useState(false);\n\n  const signinAccount = useCallback(async (data) => {\n    try {\n      setLoading(true);\n      await loginWithEmail(data.email, data.password);\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      message.error(messages.INCORRECT_USERNAME_PASSWORD_ERROR);\n    }\n  }, []);\n  return { signinAccount, loading };\n};\n"]},"metadata":{},"sourceType":"module"}