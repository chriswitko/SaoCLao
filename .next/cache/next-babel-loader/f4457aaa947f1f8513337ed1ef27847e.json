{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useReducer, useCallback, useMemo, useEffect } from 'react';\nimport constate from 'constate';\nimport { useImmerReducer } from 'use-immer';\nimport pull from 'lodash/pull';\nimport remove from 'lodash/remove';\nimport { trackActionTypes } from '../constants/actionTypes.constant';\nimport { myApiEndPoint, myApiAxiosInstance } from '../constants/myApi.constant';\nimport { convertArrayToObject, findObjectsByKeys } from '../helpers/utils.helper';\nconst initialState = {\n  tracks: {},\n  trendingTracks: [],\n  favoriteTracks: [],\n  favoriteTrackIds: []\n};\n\nconst reducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case trackActionTypes.TRENDING_TRACKS_FETCHED_SUCCESS:\n      const newTracks = convertArrayToObject(payload, 'id');\n\n      const newTrackIds = _Object$keys(newTracks).map(Number);\n\n      return void (state.tracks = _objectSpread({}, newTracks, {}, state.tracks), state.trendingTracks.push(...newTrackIds));\n\n    case trackActionTypes.FAVORITE_TRACKS_FETCHED_SUCCESS:\n      return void (state.favoriteTracks = payload);\n\n    case trackActionTypes.FAVORITE_TRACKS_IDS_FETCHED_SUCCESS:\n      return void (state.favoriteTrackIds = payload);\n\n    case trackActionTypes.ADD_FAVORITE_TRACK:\n      return void (state.favoriteTrackIds.push(payload.id), state.tracks[payload.id].count_like += 1);\n\n    case trackActionTypes.REMOVE_FAVORITE_TRACK:\n      return void (pull(state.favoriteTrackIds, payload.id), state.tracks[payload.id].count_like -= 1);\n\n    default:\n      return state;\n  }\n};\n\nconst useTrack = () => {\n  const [state, dispatch] = useImmerReducer(reducer, initialState);\n  const addTrendingTracks = useCallback(data => {\n    // useCallbackOnce here helps prevent previous tracks re-rendering\n    dispatch({\n      type: trackActionTypes.TRENDING_TRACKS_FETCHED_SUCCESS,\n      payload: data\n    });\n  }, []);\n  const addFavoriteTrackIds = useCallback(data => {\n    dispatch({\n      type: trackActionTypes.FAVORITE_TRACKS_IDS_FETCHED_SUCCESS,\n      payload: data\n    });\n  }, []);\n  const checkIsFavoriteTrack = useCallback(trackId => {\n    const isFavoriteTrack = state.favoriteTrackIds.includes(trackId);\n    return isFavoriteTrack;\n  }, [state.favoriteTrackIds]);\n  const addFavoriteTrack = useCallback(trackObj => {\n    dispatch({\n      type: trackActionTypes.ADD_FAVORITE_TRACK,\n      // desc order insertion\n      payload: trackObj\n    });\n  }, []);\n  const removeFavoriteTrack = useCallback(trackObj => {\n    dispatch({\n      type: trackActionTypes.REMOVE_FAVORITE_TRACK,\n      payload: trackObj\n    });\n  }, []);\n  return {\n    tracks: state.tracks,\n    favoriteTrackIds: state.favoriteTrackIds,\n    trendingTracks: findObjectsByKeys(state.trendingTracks, state.tracks),\n    addFavoriteTrackIds,\n    checkIsFavoriteTrack,\n    addFavoriteTrack,\n    addTrendingTracks,\n    removeFavoriteTrack\n  };\n};\n\nexport const [TrackProvider, useTracks, useTrendingTracks, useAddFavoriteTrackIds, useIsFavoriteTrack, useAddFavoriteTrack, useAddTrendingTracks, useRemoveFavoriteTrack] = constate(useTrack, value => value.tracks, value => value.trendingTracks, value => value.addFavoriteTrackIds, value => value.checkIsFavoriteTrack, value => value.addFavoriteTrack, value => value.addTrendingTracks, value => value.removeFavoriteTrack);","map":{"version":3,"sources":["C:/Users/PC/WebstormProjects/nextjs/SoundCloudClone/src/contexts/TrackContext.js"],"names":["useReducer","useCallback","useMemo","useEffect","constate","useImmerReducer","pull","remove","trackActionTypes","myApiEndPoint","myApiAxiosInstance","convertArrayToObject","findObjectsByKeys","initialState","tracks","trendingTracks","favoriteTracks","favoriteTrackIds","reducer","state","type","payload","TRENDING_TRACKS_FETCHED_SUCCESS","newTracks","newTrackIds","map","Number","push","FAVORITE_TRACKS_FETCHED_SUCCESS","FAVORITE_TRACKS_IDS_FETCHED_SUCCESS","ADD_FAVORITE_TRACK","id","count_like","REMOVE_FAVORITE_TRACK","useTrack","dispatch","addTrendingTracks","data","addFavoriteTrackIds","checkIsFavoriteTrack","trackId","isFavoriteTrack","includes","addFavoriteTrack","trackObj","removeFavoriteTrack","TrackProvider","useTracks","useTrendingTracks","useAddFavoriteTrackIds","useIsFavoriteTrack","useAddFavoriteTrack","useAddTrendingTracks","useRemoveFavoriteTrack","value"],"mappings":"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","sourcesContent":["import {\n  useReducer, useCallback, useMemo, useEffect,\n} from 'react';\nimport constate from 'constate';\nimport { useImmerReducer } from 'use-immer';\nimport pull from 'lodash/pull';\nimport remove from 'lodash/remove';\nimport { trackActionTypes } from '../constants/actionTypes.constant';\nimport { myApiEndPoint, myApiAxiosInstance } from '../constants/myApi.constant';\nimport {\n  convertArrayToObject,\n  findObjectsByKeys,\n} from '../helpers/utils.helper';\n\nconst initialState = {\n  tracks: {},\n  trendingTracks: [],\n  favoriteTracks: [],\n  favoriteTrackIds: [],\n};\n\nconst reducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case trackActionTypes.TRENDING_TRACKS_FETCHED_SUCCESS:\n      const newTracks = convertArrayToObject(payload, 'id');\n      const newTrackIds = Object.keys(newTracks).map(Number);\n\n      return void ((state.tracks = { ...newTracks, ...state.tracks }),\n      state.trendingTracks.push(...newTrackIds));\n\n    case trackActionTypes.FAVORITE_TRACKS_FETCHED_SUCCESS:\n      return void (state.favoriteTracks = payload);\n\n    case trackActionTypes.FAVORITE_TRACKS_IDS_FETCHED_SUCCESS:\n      return void (state.favoriteTrackIds = payload);\n\n    case trackActionTypes.ADD_FAVORITE_TRACK:\n      return void (state.favoriteTrackIds.push(payload.id),\n      (state.tracks[payload.id].count_like += 1));\n\n    case trackActionTypes.REMOVE_FAVORITE_TRACK:\n      return void (pull(state.favoriteTrackIds, payload.id),\n      (state.tracks[payload.id].count_like -= 1));\n\n    default:\n      return state;\n  }\n};\n\nconst useTrack = () => {\n  const [state, dispatch] = useImmerReducer(reducer, initialState);\n\n  const addTrendingTracks = useCallback((data) => { // useCallbackOnce here helps prevent previous tracks re-rendering\n    dispatch({\n      type: trackActionTypes.TRENDING_TRACKS_FETCHED_SUCCESS,\n      payload: data,\n    });\n  }, []);\n\n  const addFavoriteTrackIds = useCallback((data) => {\n    dispatch({\n      type: trackActionTypes.FAVORITE_TRACKS_IDS_FETCHED_SUCCESS,\n      payload: data,\n    });\n  }, []);\n\n  const checkIsFavoriteTrack = useCallback((trackId) => {\n    const isFavoriteTrack = state.favoriteTrackIds.includes(trackId);\n    return isFavoriteTrack;\n  }, [state.favoriteTrackIds]);\n\n  const addFavoriteTrack = useCallback((trackObj) => {\n    dispatch({\n      type: trackActionTypes.ADD_FAVORITE_TRACK, // desc order insertion\n      payload: trackObj,\n    });\n  }, []);\n\n  const removeFavoriteTrack = useCallback((trackObj) => {\n    dispatch({\n      type: trackActionTypes.REMOVE_FAVORITE_TRACK,\n      payload: trackObj,\n    });\n  }, []);\n\n  return {\n    tracks: state.tracks,\n    favoriteTrackIds: state.favoriteTrackIds,\n    trendingTracks: findObjectsByKeys(\n      state.trendingTracks,\n      state.tracks,\n    ),\n    addFavoriteTrackIds,\n    checkIsFavoriteTrack,\n    addFavoriteTrack,\n    addTrendingTracks,\n    removeFavoriteTrack,\n  };\n};\nexport const [\n  TrackProvider,\n  useTracks,\n  useTrendingTracks,\n  useAddFavoriteTrackIds,\n  useIsFavoriteTrack,\n  useAddFavoriteTrack,\n  useAddTrendingTracks,\n  useRemoveFavoriteTrack,\n] = constate(\n  useTrack,\n  (value) => value.tracks,\n  (value) => value.trendingTracks,\n  (value) => value.addFavoriteTrackIds,\n  (value) => value.checkIsFavoriteTrack,\n  (value) => value.addFavoriteTrack,\n  (value) => value.addTrendingTracks,\n  (value) => value.removeFavoriteTrack,\n);\n"]},"metadata":{},"sourceType":"module"}