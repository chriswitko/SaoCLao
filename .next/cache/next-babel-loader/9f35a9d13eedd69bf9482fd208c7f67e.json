{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport \"antd/lib/message/style/css\";\nimport _message from \"antd/lib/message\";\nimport { useState, useCallback } from 'react';\nimport { myApiEndPoint, myApiAxiosInstance } from '../../constants/myApi.constant';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { messages } from '../../constants/message.constant';\nimport { errorSelector } from '../../helpers/utils.helper'; // eslint-disable-next-line import/prefer-default-export\n\nexport var useRegisterAccount = function useRegisterAccount() {\n  var _useAuth = useAuth(),\n      loginWithEmail = _useAuth.loginWithEmail;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var registerAccount = useCallback(function _callee(data) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setLoading(true);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(myApiAxiosInstance.post(myApiEndPoint.CREATE_NEW_ACCOUNT, data));\n\n          case 4:\n            setLoading(false);\n            loginWithEmail(data.email, data.password);\n\n            _message.success(messages.ACCOUNT_WAS_CREATED_SUCCESS);\n\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            setLoading(false);\n\n            _message.error(errorSelector(_context.t0));\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]]);\n  }, []);\n  return {\n    registerAccount: registerAccount,\n    loading: loading\n  };\n};","map":{"version":3,"sources":["C:/Users/PC/WebstormProjects/nextjs/SoundCloudClone/src/hooks/user/useRegisterAccount.js"],"names":["useState","useCallback","myApiEndPoint","myApiAxiosInstance","useAuth","messages","errorSelector","useRegisterAccount","loginWithEmail","loading","setLoading","registerAccount","data","post","CREATE_NEW_ACCOUNT","email","password","success","ACCOUNT_WAS_CREATED_SUCCESS","error"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AAEA,SACEC,aADF,EAEEC,kBAFF,QAGO,gCAHP;AAIA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,QAAT,QAAyB,kCAAzB;AACA,SAASC,aAAT,QAA8B,4BAA9B,C,CAEA;;AACA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAAA,iBACXH,OAAO,EADI;AAAA,MAC9BI,cAD8B,YAC9BA,cAD8B;;AAAA,kBAERR,QAAQ,CAAC,KAAD,CAFA;AAAA,MAE/BS,OAF+B;AAAA,MAEtBC,UAFsB;;AAItC,MAAMC,eAAe,GAAGV,WAAW,CAAC,iBAAOW,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhCF,YAAAA,UAAU,CAAC,IAAD,CAAV;AAFgC;AAAA,6CAG1BP,kBAAkB,CAACU,IAAnB,CACJX,aAAa,CAACY,kBADV,EAEJF,IAFI,CAH0B;;AAAA;AAOhCF,YAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,YAAAA,cAAc,CAACI,IAAI,CAACG,KAAN,EAAaH,IAAI,CAACI,QAAlB,CAAd;;AACA,qBAAQC,OAAR,CAAgBZ,QAAQ,CAACa,2BAAzB;;AATgC;AAAA;;AAAA;AAAA;AAAA;AAWhCR,YAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,qBAAQS,KAAR,CAAcb,aAAa,aAA3B;;AAZgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAchC,EAdgC,CAAnC;AAeA,SAAO;AAAEK,IAAAA,eAAe,EAAfA,eAAF;AAAmBF,IAAAA,OAAO,EAAPA;AAAnB,GAAP;AACD,CApBM","sourcesContent":["import { useState, useCallback } from 'react';\nimport { message } from 'antd';\nimport {\n  myApiEndPoint,\n  myApiAxiosInstance,\n} from '../../constants/myApi.constant';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { messages } from '../../constants/message.constant';\nimport { errorSelector } from '../../helpers/utils.helper';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const useRegisterAccount = () => {\n  const { loginWithEmail } = useAuth();\n  const [loading, setLoading] = useState(false);\n\n  const registerAccount = useCallback(async (data) => {\n    try {\n      setLoading(true);\n      await myApiAxiosInstance.post(\n        myApiEndPoint.CREATE_NEW_ACCOUNT,\n        data,\n      );\n      setLoading(false);\n      loginWithEmail(data.email, data.password);\n      message.success(messages.ACCOUNT_WAS_CREATED_SUCCESS);\n    } catch (error) {\n      setLoading(false);\n      message.error(errorSelector(error));\n    }\n  }, []);\n  return { registerAccount, loading };\n};\n"]},"metadata":{},"sourceType":"module"}