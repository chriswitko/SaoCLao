{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\WebstormProjects\\\\nextjs\\\\SoundCloudClone\\\\src\\\\components\\\\Track\\\\TrackItem.container.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useHover } from 'react-use';\nimport classNames from 'classnames';\nimport { TrackItemLikesCount } from './TrackItemLikesCount';\nimport { TrackItemHeart } from './TrackItemHeart';\nimport { TrackItemAvatarAndButtonPlay } from './TrackItemAvatarAndButtonPlay';\nimport { useIsCurrentTrackPlaying } from '../../contexts/MusicPlayerContext';\nexport const TrackItemContainer = React.memo(({\n  track,\n  numericalOrder\n}) => {\n  const element = hovered => __jsx(\"div\", {\n    className: classNames('p-1 flex justify-between items-center hover:bg-gray-200', {\n      'bg-gray-200': isPlaying\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \" font-semibold text-lg w-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, numericalOrder), __jsx(TrackItemAvatarAndButtonPlay, {\n    track: track,\n    hovered: hovered,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \" flex-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, track.artist), __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, track.name)), __jsx(TrackItemLikesCount, {\n    track: track,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), __jsx(TrackItemHeart, {\n    track: track,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n\n  const checkIsPlaying = useIsCurrentTrackPlaying();\n  const isPlaying = checkIsPlaying(track.id); // this line has to be placed before useHover, so it can pass isPlaying variable to element\n\n  const [hoverable] = useHover(element);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, hoverable);\n});","map":{"version":3,"sources":["C:/Users/PC/WebstormProjects/nextjs/SoundCloudClone/src/components/Track/TrackItem.container.js"],"names":["React","useState","useEffect","useHover","classNames","TrackItemLikesCount","TrackItemHeart","TrackItemAvatarAndButtonPlay","useIsCurrentTrackPlaying","TrackItemContainer","memo","track","numericalOrder","element","hovered","isPlaying","artist","name","checkIsPlaying","id","hoverable"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,4BAAT,QAA6C,gCAA7C;AACA,SAASC,wBAAT,QAAyC,mCAAzC;AAEA,OAAO,MAAMC,kBAAkB,GAAGT,KAAK,CAACU,IAAN,CAAW,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA+B;AAC1E,QAAMC,OAAO,GAAIC,OAAD,IACd;AACE,IAAA,SAAS,EAAEV,UAAU,CACnB,yDADmB,EAEnB;AAAE,qBAAeW;AAAjB,KAFmB,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8CH,cAA9C,CANF,EAQE,MAAC,4BAAD;AAA8B,IAAA,KAAK,EAAED,KAArC;AAA4C,IAAA,OAAO,EAAEG,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAUE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBH,KAAK,CAACK,MAAzB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,KAAK,CAACM,IAAX,CAFF,CAVF,EAeE,MAAC,mBAAD;AAAqB,IAAA,KAAK,EAAEN,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAgBE,MAAC,cAAD;AAAgB,IAAA,KAAK,EAAEA,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF;;AAqBA,QAAMO,cAAc,GAAGV,wBAAwB,EAA/C;AACA,QAAMO,SAAS,GAAGG,cAAc,CAACP,KAAK,CAACQ,EAAP,CAAhC,CAvB0E,CAuB9B;;AAC5C,QAAM,CAACC,SAAD,IAAcjB,QAAQ,CAACU,OAAD,CAA5B;AAEA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMO,SAAN,CAAP;AACD,CA3BiC,CAA3B","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Avatar, Icon } from 'antd';\nimport { useHover } from 'react-use';\nimport classNames from 'classnames';\nimport { TrackItemLikesCount } from './TrackItemLikesCount';\nimport { TrackItemHeart } from './TrackItemHeart';\nimport { TrackItemAvatarAndButtonPlay } from './TrackItemAvatarAndButtonPlay';\nimport { useIsCurrentTrackPlaying } from '../../contexts/MusicPlayerContext';\n\nexport const TrackItemContainer = React.memo(({ track, numericalOrder }) => {\n  const element = (hovered) => (\n    <div\n      className={classNames(\n        'p-1 flex justify-between items-center hover:bg-gray-200',\n        { 'bg-gray-200': isPlaying },\n      )}\n    >\n      <div className=\" font-semibold text-lg w-10\">{numericalOrder}</div>\n\n      <TrackItemAvatarAndButtonPlay track={track} hovered={hovered} />\n\n      <div className=\" flex-1\">\n        <div className=\"\">{track.artist}</div>\n        <h2>{track.name}</h2>\n      </div>\n\n      <TrackItemLikesCount track={track} />\n      <TrackItemHeart track={track} />\n    </div>\n  );\n\n  const checkIsPlaying = useIsCurrentTrackPlaying();\n  const isPlaying = checkIsPlaying(track.id); // this line has to be placed before useHover, so it can pass isPlaying variable to element\n  const [hoverable] = useHover(element);\n\n  return <div>{hoverable}</div>;\n});\n"]},"metadata":{},"sourceType":"module"}