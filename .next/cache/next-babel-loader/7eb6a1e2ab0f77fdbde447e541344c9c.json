{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport constate from 'constate';\nimport { useState, useCallback } from 'react';\n\nvar useSingleModal = function useSingleModal(params) {\n  var _useState = useState(false),\n      isModalShowing = _useState[0],\n      setIsModalShowing = _useState[1];\n\n  var _useState2 = useState(null),\n      modalContent = _useState2[0],\n      setModalContent = _useState2[1];\n\n  var toggleModal = useCallback(function () {\n    setIsModalShowing(function (pre) {\n      return !pre;\n    });\n  }, []);\n\n  var closeModal = function closeModal() {\n    setIsModalShowing(false);\n  };\n\n  var openModal = function openModal() {\n    setIsModalShowing(true);\n  };\n\n  var setContent = function setContent(content) {\n    setModalContent(content);\n  };\n\n  var toggleModalWithContent = useCallback(function (content) {\n    openModal();\n    setContent(content);\n  }, []);\n  return {\n    isModalShowing: isModalShowing,\n    toggleModal: toggleModal,\n    modalContent: modalContent,\n    toggleModalWithContent: toggleModalWithContent\n  };\n};\n\nvar _constate = constate(useSingleModal, function (value) {\n  return value.isModalShowing;\n}, function (value) {\n  return value.toggleModal;\n}, function (value) {\n  return value.modalContent;\n}, function (value) {\n  return value.toggleModalWithContent;\n}),\n    _constate2 = _slicedToArray(_constate, 5),\n    SingleModalProvider = _constate2[0],\n    useIsModalShowing = _constate2[1],\n    useToggleModal = _constate2[2],\n    useModalContent = _constate2[3],\n    useToggleModalWithContent = _constate2[4];\n\nexport { SingleModalProvider, useIsModalShowing, useToggleModal, useModalContent, useToggleModalWithContent };","map":null,"metadata":{},"sourceType":"module"}