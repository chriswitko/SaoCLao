{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport constate from 'constate';\nimport { firebase } from '../constants/firebase.constant';\nimport { myApiAxiosInstance } from '../constants/myApi.constant';\nimport { localStorageService } from '../helpers/storage.helper';\n\nvar useAuther = function useAuther() {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      user = _React$useState2[0],\n      setUser = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      refreshToken = _React$useState4[0],\n      setRefreshToken = _React$useState4[1];\n\n  React.useEffect(function () {\n    // Listen for auth state changes\n    var unsubscribe = firebase.auth().onAuthStateChanged(function _callee(user) {\n      var tokenResult;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!user) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(firebase.auth().currentUser.getIdTokenResult(true));\n\n            case 3:\n              tokenResult = _context.sent;\n              localStorageService.setToken(tokenResult.token);\n              setRefreshToken(true);\n              setUser(_objectSpread({}, user, {\n                admin: tokenResult.claims.admin,\n                username: user.displayName\n              }));\n              _context.next = 11;\n              break;\n\n            case 9:\n              localStorageService.removeToken();\n              setUser(null);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }); // Unsubscribe to the listener when unmounting\n\n    return function () {\n      unsubscribe();\n    };\n  }, []);\n\n  var loginWithEmail = function loginWithEmail(email, password) {\n    return _regeneratorRuntime.async(function loginWithEmail$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email, password));\n\n          case 2:\n            window.location.reload();\n            localStorageService.setToken('authenticated'); // for showing user section quickly when token is empty because google auth is slow\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n\n  var signOut = function signOut() {\n    firebase.auth().signOut();\n    window.location.reload();\n  };\n\n  return {\n    user: user,\n    refreshToken: refreshToken,\n    loginWithEmail: loginWithEmail,\n    signOut: signOut\n  };\n};\n\nvar _constate = constate(useAuther),\n    _constate2 = _slicedToArray(_constate, 2),\n    AuthProvider = _constate2[0],\n    useAuth = _constate2[1];\n\nexport { AuthProvider, useAuth };","map":null,"metadata":{},"sourceType":"module"}