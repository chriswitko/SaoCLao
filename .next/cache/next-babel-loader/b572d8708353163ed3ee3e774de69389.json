{"ast":null,"code":"import constate from 'constate';\nimport { useState, useCallback } from 'react';\n\nconst useSingleModal = params => {\n  const {\n    0: isModalShowing,\n    1: setIsModalShowing\n  } = useState(false);\n  const {\n    0: modalContent,\n    1: setModalContent\n  } = useState(null);\n  const toggleModal = useCallback(() => {\n    setIsModalShowing(pre => !pre);\n  }, []);\n\n  const closeModal = () => {\n    setIsModalShowing(false);\n  };\n\n  const openModal = () => {\n    setIsModalShowing(true);\n  };\n\n  const setContent = content => {\n    setModalContent(content);\n  };\n\n  const toggleModalWithContent = useCallback(content => {\n    openModal();\n    setContent(content);\n  }, []);\n  return {\n    isModalShowing,\n    toggleModal,\n    modalContent,\n    toggleModalWithContent\n  };\n};\n\nexport const [SingleModalProvider, useIsModalShowing, useToggleModal, useModalContent, useToggleModalWithContent] = constate(useSingleModal, value => value.isModalShowing, value => value.toggleModal, value => value.modalContent, value => value.toggleModalWithContent);","map":{"version":3,"sources":["C:/Users/PC/WebstormProjects/nextjs/SoundCloudClone/src/contexts/SingleModalContext.js"],"names":["constate","useState","useCallback","useSingleModal","params","isModalShowing","setIsModalShowing","modalContent","setModalContent","toggleModal","pre","closeModal","openModal","setContent","content","toggleModalWithContent","SingleModalProvider","useIsModalShowing","useToggleModal","useModalContent","useToggleModalWithContent","value"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;;AAEA,MAAMC,cAAc,GAAIC,MAAD,IAAY;AACjC,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAAsCL,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM;AAAA,OAACM,YAAD;AAAA,OAAeC;AAAf,MAAkCP,QAAQ,CAAC,IAAD,CAAhD;AAEA,QAAMQ,WAAW,GAAGP,WAAW,CAAC,MAAM;AACpCI,IAAAA,iBAAiB,CAAEI,GAAD,IAAS,CAACA,GAAX,CAAjB;AACD,GAF8B,EAE5B,EAF4B,CAA/B;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACvBL,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAFD;;AAIA,QAAMM,SAAS,GAAG,MAAM;AACtBN,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,GAFD;;AAIA,QAAMO,UAAU,GAAIC,OAAD,IAAa;AAC9BN,IAAAA,eAAe,CAACM,OAAD,CAAf;AACD,GAFD;;AAIA,QAAMC,sBAAsB,GAAGb,WAAW,CAAEY,OAAD,IAAa;AACtDF,IAAAA,SAAS;AACTC,IAAAA,UAAU,CAACC,OAAD,CAAV;AACD,GAHyC,EAGvC,EAHuC,CAA1C;AAKA,SAAO;AACLT,IAAAA,cADK;AAELI,IAAAA,WAFK;AAGLF,IAAAA,YAHK;AAILQ,IAAAA;AAJK,GAAP;AAMD,CA/BD;;AAiCA,OAAO,MAAM,CACXC,mBADW,EAEXC,iBAFW,EAGXC,cAHW,EAIXC,eAJW,EAKXC,yBALW,IAMTpB,QAAQ,CACVG,cADU,EAETkB,KAAD,IAAWA,KAAK,CAAChB,cAFP,EAGTgB,KAAD,IAAWA,KAAK,CAACZ,WAHP,EAITY,KAAD,IAAWA,KAAK,CAACd,YAJP,EAKTc,KAAD,IAAWA,KAAK,CAACN,sBALP,CANL","sourcesContent":["import constate from 'constate';\nimport { useState, useCallback } from 'react';\n\nconst useSingleModal = (params) => {\n  const [isModalShowing, setIsModalShowing] = useState(false);\n  const [modalContent, setModalContent] = useState(null);\n\n  const toggleModal = useCallback(() => {\n    setIsModalShowing((pre) => !pre);\n  }, []);\n\n  const closeModal = () => {\n    setIsModalShowing(false);\n  };\n\n  const openModal = () => {\n    setIsModalShowing(true);\n  };\n\n  const setContent = (content) => {\n    setModalContent(content);\n  };\n\n  const toggleModalWithContent = useCallback((content) => {\n    openModal();\n    setContent(content);\n  }, []);\n\n  return {\n    isModalShowing,\n    toggleModal,\n    modalContent,\n    toggleModalWithContent,\n  };\n};\n\nexport const [\n  SingleModalProvider,\n  useIsModalShowing,\n  useToggleModal,\n  useModalContent,\n  useToggleModalWithContent,\n] = constate(\n  useSingleModal,\n  (value) => value.isModalShowing,\n  (value) => value.toggleModal,\n  (value) => value.modalContent,\n  (value) => value.toggleModalWithContent,\n);\n"]},"metadata":{},"sourceType":"module"}