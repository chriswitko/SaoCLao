{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useHover } from 'react-use';\nimport classNames from 'classnames';\nimport { TrackItemLikesCount } from './TrackItemLikesCount';\nimport { TrackItemHeart } from './TrackItemHeart';\nimport { TrackItemAvatarAndButtonPlay } from './TrackItemAvatarAndButtonPlay';\nimport { useIsCurrentTrackPlaying } from '../../contexts/MusicPlayerContext';\nexport var TrackItemContainer = React.memo(function (_ref) {\n  var track = _ref.track,\n      numericalOrder = _ref.numericalOrder;\n\n  var element = function element(hovered) {\n    return __jsx(\"div\", {\n      className: classNames('p-1 flex justify-between items-center hover:bg-gray-200', {\n        'bg-gray-200': isPlaying\n      })\n    }, __jsx(\"div\", {\n      className: \" font-semibold text-lg w-10\"\n    }, numericalOrder), __jsx(TrackItemAvatarAndButtonPlay, {\n      track: track,\n      hovered: hovered\n    }), __jsx(\"div\", {\n      className: \" flex-1\"\n    }, __jsx(\"div\", {\n      className: \"\"\n    }, track.artist), __jsx(\"h2\", null, track.name)), __jsx(TrackItemLikesCount, {\n      track: track\n    }), __jsx(TrackItemHeart, {\n      track: track\n    }));\n  };\n\n  var checkIsPlaying = useIsCurrentTrackPlaying();\n  var isPlaying = checkIsPlaying(track.id); // this line has to be placed before useHover, so it can pass isPlaying variable to element\n\n  var _useHover = useHover(element),\n      _useHover2 = _slicedToArray(_useHover, 1),\n      hoverable = _useHover2[0];\n\n  return __jsx(\"div\", null, hoverable);\n});","map":null,"metadata":{},"sourceType":"module"}