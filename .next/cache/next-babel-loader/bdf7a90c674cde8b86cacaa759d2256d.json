{"ast":null,"code":"import \"antd/lib/modal/style/css\";\nimport _Modal from \"antd/lib/modal\";\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\WebstormProjects\\\\nextjs\\\\SoundCloudClone\\\\src\\\\components\\\\Common\\\\DynamicContent.modal.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useIsModalShowing, useToggleModal, useModalContent } from '../../contexts/SingleModalContext';\nexport default function DynamicModal() {\n  var isModalShowing = useIsModalShowing();\n  var toggleModal = useToggleModal();\n  var modalContent = useModalContent();\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(_Modal, {\n    style: {\n      top: 20\n    },\n    visible: isModalShowing,\n    onOk: toggleModal,\n    onCancel: toggleModal,\n    footer: null,\n    destroyOnClose: true // important\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, modalContent));\n}","map":{"version":3,"sources":["C:/Users/PC/WebstormProjects/nextjs/SoundCloudClone/src/components/Common/DynamicContent.modal.js"],"names":["React","useIsModalShowing","useToggleModal","useModalContent","DynamicModal","isModalShowing","toggleModal","modalContent","top"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,iBADF,EAEEC,cAFF,EAGEC,eAHF,QAIO,mCAJP;AAMA,eAAe,SAASC,YAAT,GAAwB;AACrC,MAAMC,cAAc,GAAGJ,iBAAiB,EAAxC;AACA,MAAMK,WAAW,GAAGJ,cAAc,EAAlC;AACA,MAAMK,YAAY,GAAGJ,eAAe,EAApC;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAE;AAAEK,MAAAA,GAAG,EAAE;AAAP,KADT;AAEE,IAAA,OAAO,EAAEH,cAFX;AAGE,IAAA,IAAI,EAAEC,WAHR;AAIE,IAAA,QAAQ,EAAEA,WAJZ;AAKE,IAAA,MAAM,EAAE,IALV;AAME,IAAA,cAAc,MANhB,CAMiB;AANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGC,YARH,CADF,CADF;AAcD","sourcesContent":["import React from 'react';\nimport { Modal, Button } from 'antd';\nimport {\n  useIsModalShowing,\n  useToggleModal,\n  useModalContent,\n} from '../../contexts/SingleModalContext';\n\nexport default function DynamicModal() {\n  const isModalShowing = useIsModalShowing();\n  const toggleModal = useToggleModal();\n  const modalContent = useModalContent();\n\n  return (\n    <div>\n      <Modal\n        style={{ top: 20 }}\n        visible={isModalShowing}\n        onOk={toggleModal}\n        onCancel={toggleModal}\n        footer={null}\n        destroyOnClose // important\n      >\n        {modalContent}\n      </Modal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}