{"ast":null,"code":"import \"antd/lib/icon/style/css\";\nimport _Icon from \"antd/lib/icon\";\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\WebstormProjects\\\\nextjs\\\\SoundCloudClone\\\\src\\\\components\\\\Track\\\\TrackItemHeart.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useLikeTrack } from '../../hooks/track/useLikeTrack';\nimport { useUnlikeTrack } from '../../hooks/track/useUnlikeTrack';\nimport { localStorageService } from '../../helpers/storage.helper';\nimport { useToggleModalWithContent } from '../../contexts/SingleModalContext';\nimport LoginModal from '../Common/Login.modal';\nimport { useIsFavoriteTrack } from '../../contexts/TrackContext';\nexport var TrackItemHeart = React.memo(function (_ref) {\n  var track = _ref.track;\n  var checkIsFavoriteTrack = useIsFavoriteTrack();\n  var isFavoriteTrack = checkIsFavoriteTrack(track.id);\n\n  var _useLikeTrack = useLikeTrack(track),\n      likeTrack = _useLikeTrack.likeTrack;\n\n  var _useUnlikeTrack = useUnlikeTrack(track),\n      unlikeTrack = _useUnlikeTrack.unlikeTrack;\n\n  var toggleModalWithContent = useToggleModalWithContent();\n\n  var handleLiking = function handleLiking(params) {\n    if (!localStorageService.getToken()) toggleModalWithContent(__jsx(LoginModal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }));else if (!isFavoriteTrack) likeTrack();else unlikeTrack();\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    className: \"\",\n    onClick: handleLiking,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(_Icon, {\n    type: \"heart\",\n    theme: \"twoTone\",\n    twoToneColor: isFavoriteTrack ? '#f00' : '#000',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })));\n});","map":{"version":3,"sources":["C:/Users/PC/WebstormProjects/nextjs/SoundCloudClone/src/components/Track/TrackItemHeart.js"],"names":["React","useLikeTrack","useUnlikeTrack","localStorageService","useToggleModalWithContent","LoginModal","useIsFavoriteTrack","TrackItemHeart","memo","track","checkIsFavoriteTrack","isFavoriteTrack","id","likeTrack","unlikeTrack","toggleModalWithContent","handleLiking","params","getToken"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,QAA6B,gCAA7B;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,mBAAT,QAAoC,8BAApC;AACA,SAASC,yBAAT,QAA0C,mCAA1C;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,kBAAT,QAAmC,6BAAnC;AAEA,OAAO,IAAMC,cAAc,GAAGP,KAAK,CAACQ,IAAN,CAAW,gBAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACtD,MAAMC,oBAAoB,GAAGJ,kBAAkB,EAA/C;AACA,MAAMK,eAAe,GAAGD,oBAAoB,CAACD,KAAK,CAACG,EAAP,CAA5C;;AAFsD,sBAGhCX,YAAY,CAACQ,KAAD,CAHoB;AAAA,MAG9CI,SAH8C,iBAG9CA,SAH8C;;AAAA,wBAI9BX,cAAc,CAACO,KAAD,CAJgB;AAAA,MAI9CK,WAJ8C,mBAI9CA,WAJ8C;;AAKtD,MAAMC,sBAAsB,GAAGX,yBAAyB,EAAxD;;AAEA,MAAMY,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAAY;AAC/B,QAAI,CAACd,mBAAmB,CAACe,QAApB,EAAL,EAAqCH,sBAAsB,CAAC,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAAtB,CAArC,KACK,IAAI,CAACJ,eAAL,EAAsBE,SAAS,GAA/B,KACAC,WAAW;AACjB,GAJD;;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,EAAlB;AAAqB,IAAA,OAAO,EAAEE,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,YAAY,EAAEL,eAAe,GAAG,MAAH,GAAY,MAH3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAWD,CAxB6B,CAAvB","sourcesContent":["import React from 'react';\nimport { Avatar, Icon } from 'antd';\nimport { useLikeTrack } from '../../hooks/track/useLikeTrack';\nimport { useUnlikeTrack } from '../../hooks/track/useUnlikeTrack';\nimport { localStorageService } from '../../helpers/storage.helper';\nimport { useToggleModalWithContent } from '../../contexts/SingleModalContext';\nimport LoginModal from '../Common/Login.modal';\nimport { useIsFavoriteTrack } from '../../contexts/TrackContext';\n\nexport const TrackItemHeart = React.memo(({ track }) => {\n  const checkIsFavoriteTrack = useIsFavoriteTrack();\n  const isFavoriteTrack = checkIsFavoriteTrack(track.id);\n  const { likeTrack } = useLikeTrack(track);\n  const { unlikeTrack } = useUnlikeTrack(track);\n  const toggleModalWithContent = useToggleModalWithContent();\n\n  const handleLiking = (params) => {\n    if (!localStorageService.getToken()) toggleModalWithContent(<LoginModal />);\n    else if (!isFavoriteTrack) likeTrack();\n    else unlikeTrack();\n  };\n\n  return (\n    <div>\n      <button className=\"\" onClick={handleLiking}>\n        <Icon\n          type=\"heart\"\n          theme=\"twoTone\"\n          twoToneColor={isFavoriteTrack ? '#f00' : '#000'}\n        />\n      </button>\n    </div>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}