{"ast":null,"code":"import \"antd/lib/message/style/css\";\nimport _message from \"antd/lib/message\";\nimport { useEffect, useState } from \"react\";\nimport { myApiEndPoint, myApiAxiosInstance } from \"../../constants/myApi.constant\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { useAddFavoriteTrackIds } from \"../../contexts/TrackContext\";\nimport { errorSelector } from \"../../helpers/utils.helper\";\nimport { localStorageService } from \"../../helpers/storage.helper\";\nexport const useFetchFavoriteTrackIds = () => {\n  const addFavoriteTrackIds = useAddFavoriteTrackIds();\n  const {\n    refreshToken\n  } = useAuth();\n  useEffect(() => {\n    const fetchFavoriteTrackIds = async params => {\n      try {\n        const res = await myApiAxiosInstance.get(myApiEndPoint.FAVORITE_TRACK_IDS);\n        addFavoriteTrackIds(res.data);\n      } catch (error) {\n        _message.error(errorSelector(error));\n      }\n    };\n\n    if (!refreshToken) return; // false mean firebase haven't release token, so throw unauthorized error\n\n    fetchFavoriteTrackIds();\n  }, [refreshToken]);\n};","map":{"version":3,"sources":["C:/Users/PC/WebstormProjects/nextjs/SoundCloudClone/src/hooks/track/useFetchFavoriteTrackIds.js"],"names":["useEffect","useState","myApiEndPoint","myApiAxiosInstance","useAuth","useAddFavoriteTrackIds","errorSelector","localStorageService","useFetchFavoriteTrackIds","addFavoriteTrackIds","refreshToken","fetchFavoriteTrackIds","params","res","get","FAVORITE_TRACK_IDS","data","error"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SACEC,aADF,EAEEC,kBAFF,QAGO,gCAHP;AAIA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,sBAAT,QAAuC,6BAAvC;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,mBAAT,QAAoC,8BAApC;AAEA,OAAO,MAAMC,wBAAwB,GAAG,MAAM;AAC5C,QAAMC,mBAAmB,GAAGJ,sBAAsB,EAAlD;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAmBN,OAAO,EAAhC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,qBAAqB,GAAG,MAAMC,MAAN,IAAgB;AAC5C,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMV,kBAAkB,CAACW,GAAnB,CAChBZ,aAAa,CAACa,kBADE,CAAlB;AAGAN,QAAAA,mBAAmB,CAACI,GAAG,CAACG,IAAL,CAAnB;AACD,OALD,CAKE,OAAOC,KAAP,EAAc;AACd,iBAAQA,KAAR,CAAcX,aAAa,CAACW,KAAD,CAA3B;AACD;AACF,KATD;;AAUA,QAAI,CAACP,YAAL,EAAmB,OAXL,CAWa;;AAC3BC,IAAAA,qBAAqB;AACtB,GAbQ,EAaN,CAACD,YAAD,CAbM,CAAT;AAcD,CAlBM","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { message } from \"antd\";\nimport {\n  myApiEndPoint,\n  myApiAxiosInstance\n} from \"../../constants/myApi.constant\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { useAddFavoriteTrackIds } from \"../../contexts/TrackContext\";\nimport { errorSelector } from \"../../helpers/utils.helper\";\nimport { localStorageService } from \"../../helpers/storage.helper\";\n\nexport const useFetchFavoriteTrackIds = () => {\n  const addFavoriteTrackIds = useAddFavoriteTrackIds();\n  const { refreshToken } = useAuth();\n\n  useEffect(() => {\n    const fetchFavoriteTrackIds = async params => {\n      try {\n        const res = await myApiAxiosInstance.get(\n          myApiEndPoint.FAVORITE_TRACK_IDS\n        );\n        addFavoriteTrackIds(res.data);\n      } catch (error) {\n        message.error(errorSelector(error));\n      }\n    };\n    if (!refreshToken) return; // false mean firebase haven't release token, so throw unauthorized error\n    fetchFavoriteTrackIds();\n  }, [refreshToken]);\n};\n"]},"metadata":{},"sourceType":"module"}