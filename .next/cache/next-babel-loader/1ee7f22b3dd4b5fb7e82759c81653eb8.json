{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport constate from 'constate';\nimport { firebase } from '../constants/firebase.constant';\nimport { myApiAxiosInstance } from '../constants/myApi.constant';\nimport { localStorageService } from '../helpers/storage.helper';\n\nvar useAuther = function useAuther() {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      user = _React$useState2[0],\n      setUser = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      refreshToken = _React$useState4[0],\n      setRefreshToken = _React$useState4[1];\n\n  React.useEffect(function () {\n    // Listen for auth state changes\n    var unsubscribe = firebase.auth().onAuthStateChanged(function _callee(user) {\n      var tokenResult;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!user) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(firebase.auth().currentUser.getIdTokenResult(true));\n\n            case 3:\n              tokenResult = _context.sent;\n              localStorageService.setToken(tokenResult.token);\n              setRefreshToken(true);\n              setUser(_objectSpread({}, user, {\n                admin: tokenResult.claims.admin,\n                username: user.displayName\n              }));\n              _context.next = 11;\n              break;\n\n            case 9:\n              localStorageService.removeToken();\n              setUser(null);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }); // Unsubscribe to the listener when unmounting\n\n    return function () {\n      unsubscribe();\n    };\n  }, []);\n\n  var loginWithEmail = function loginWithEmail(email, password) {\n    return _regeneratorRuntime.async(function loginWithEmail$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email, password));\n\n          case 2:\n            window.location.reload();\n            localStorageService.setToken('authenticated'); // for showing user section quickly when token is empty because google auth is slow\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n\n  var signOut = function signOut() {\n    firebase.auth().signOut();\n    window.location.reload();\n  };\n\n  return {\n    user: user,\n    refreshToken: refreshToken,\n    loginWithEmail: loginWithEmail,\n    signOut: signOut\n  };\n};\n\nvar _constate = constate(useAuther),\n    _constate2 = _slicedToArray(_constate, 2),\n    AuthProvider = _constate2[0],\n    useAuth = _constate2[1];\n\nexport { AuthProvider, useAuth };","map":{"version":3,"sources":["C:/Users/PC/WebstormProjects/nextjs/SoundCloudClone/src/contexts/AuthContext.js"],"names":["React","useState","useCallback","useEffect","constate","firebase","myApiAxiosInstance","localStorageService","useAuther","user","setUser","refreshToken","setRefreshToken","unsubscribe","auth","onAuthStateChanged","currentUser","getIdTokenResult","tokenResult","setToken","token","admin","claims","username","displayName","removeToken","loginWithEmail","email","password","signInWithEmailAndPassword","window","location","reload","signOut","AuthProvider","useAuth"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,QAAT,QAAyB,gCAAzB;AACA,SAASC,kBAAT,QAAmC,6BAAnC;AACA,SAASC,mBAAT,QAAoC,2BAApC;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA,wBACER,KAAK,CAACC,QAAN,CAAe,IAAf,CADF;AAAA;AAAA,MACfQ,IADe;AAAA,MACTC,OADS;;AAAA,yBAEkBV,KAAK,CAACC,QAAN,CAAe,IAAf,CAFlB;AAAA;AAAA,MAEfU,YAFe;AAAA,MAEDC,eAFC;;AAItBZ,EAAAA,KAAK,CAACG,SAAN,CAAgB,YAAM;AACpB;AACA,QAAMU,WAAW,GAAGR,QAAQ,CAACS,IAAT,GAAgBC,kBAAhB,CAAmC,iBAAON,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACjDA,IADiD;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAEzBJ,QAAQ,CAC/BS,IADuB,GAEvBE,WAFuB,CAEXC,gBAFW,CAEM,IAFN,CAFyB;;AAAA;AAE7CC,cAAAA,WAF6C;AAMnDX,cAAAA,mBAAmB,CAACY,QAApB,CAA6BD,WAAW,CAACE,KAAzC;AACAR,cAAAA,eAAe,CAAC,IAAD,CAAf;AACAF,cAAAA,OAAO,mBACFD,IADE;AAELY,gBAAAA,KAAK,EAAEH,WAAW,CAACI,MAAZ,CAAmBD,KAFrB;AAGLE,gBAAAA,QAAQ,EAAEd,IAAI,CAACe;AAHV,iBAAP;AARmD;AAAA;;AAAA;AAcnDjB,cAAAA,mBAAmB,CAACkB,WAApB;AACAf,cAAAA,OAAO,CAAC,IAAD,CAAP;;AAfmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAnC,CAApB,CAFoB,CAqBpB;;AACA,WAAO,YAAM;AACXG,MAAAA,WAAW;AACZ,KAFD;AAGD,GAzBD,EAyBG,EAzBH;;AA2BA,MAAMa,cAAc,GAAG,SAAjBA,cAAiB,CAAOC,KAAP,EAAcC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACfvB,QAAQ,CAACS,IAAT,GAAgBe,0BAAhB,CAA2CF,KAA3C,EAAkDC,QAAlD,CADe;;AAAA;AAErBE,YAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACAzB,YAAAA,mBAAmB,CAACY,QAApB,CAA6B,eAA7B,EAHqB,CAG0B;;AAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAMA,MAAMc,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB5B,IAAAA,QAAQ,CAACS,IAAT,GAAgBmB,OAAhB;AACAH,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAHD;;AAIA,SAAO;AACLvB,IAAAA,IAAI,EAAJA,IADK;AAELE,IAAAA,YAAY,EAAZA,YAFK;AAGLe,IAAAA,cAAc,EAAdA,cAHK;AAILO,IAAAA,OAAO,EAAPA;AAJK,GAAP;AAMD,CA/CD;;gBAiDuC7B,QAAQ,CAACI,SAAD,C;;IAAjC0B,Y;IAAcC,O","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport constate from 'constate';\nimport { firebase } from '../constants/firebase.constant';\nimport { myApiAxiosInstance } from '../constants/myApi.constant';\nimport { localStorageService } from '../helpers/storage.helper';\n\nconst useAuther = () => {\n  const [user, setUser] = React.useState(null);\n  const [refreshToken, setRefreshToken] = React.useState(null);\n\n  React.useEffect(() => {\n    // Listen for auth state changes\n    const unsubscribe = firebase.auth().onAuthStateChanged(async (user) => {\n      if (user) {\n        const tokenResult = await firebase\n          .auth()\n          .currentUser.getIdTokenResult(true);\n\n        localStorageService.setToken(tokenResult.token);\n        setRefreshToken(true);\n        setUser({\n          ...user,\n          admin: tokenResult.claims.admin,\n          username: user.displayName,\n        });\n      } else {\n        localStorageService.removeToken();\n        setUser(null);\n      }\n    });\n\n    // Unsubscribe to the listener when unmounting\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  const loginWithEmail = async (email, password) => {\n    await firebase.auth().signInWithEmailAndPassword(email, password);\n    window.location.reload();\n    localStorageService.setToken('authenticated'); // for showing user section quickly when token is empty because google auth is slow\n  };\n\n  const signOut = () => {\n    firebase.auth().signOut();\n    window.location.reload();\n  };\n  return {\n    user,\n    refreshToken,\n    loginWithEmail,\n    signOut,\n  };\n};\n\nexport const [AuthProvider, useAuth] = constate(useAuther);\n"]},"metadata":{},"sourceType":"module"}