{"ast":null,"code":"import \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/checkbox/style/css\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport \"antd/lib/form/style/css\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/icon/style/css\";\nimport _Icon from \"antd/lib/icon\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { RHFInput } from 'react-hook-form-input';\nimport { useRegisterAccount } from '../../hooks/user/useRegisterAccount';\nimport Login from './Login';\nexport default function RegisterModal() {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setValue,\n    reset\n  } = useForm();\n  const {\n    loading,\n    registerAccount\n  } = useRegisterAccount();\n\n  const onSubmit = data => {\n    registerAccount(data);\n  };\n\n  return __jsx(\"div\", null, __jsx(_Form, {\n    onSubmit: handleSubmit(onSubmit),\n    className: \" p-4 \"\n  }, __jsx(_Form.Item, null, __jsx(RHFInput, {\n    as: __jsx(_Input, {\n      prefix: __jsx(_Icon, {\n        type: \"name\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        }\n      }),\n      placeholder: \"Name\"\n    }),\n    rules: {\n      required: 'Your name is required'\n    },\n    name: \"name\",\n    register: register,\n    setValue: setValue\n  }), errors.name && errors.name.message), __jsx(_Form.Item, null, __jsx(RHFInput, {\n    as: __jsx(_Input, {\n      prefix: __jsx(_Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        }\n      }),\n      placeholder: \"Username\"\n    }),\n    rules: {\n      required: 'Your Username is required'\n    },\n    name: \"username\",\n    register: register,\n    setValue: setValue\n  }), errors.username && errors.username.message), __jsx(_Form.Item, null, __jsx(RHFInput, {\n    as: __jsx(_Input, {\n      prefix: __jsx(_Icon, {\n        type: \"email\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        }\n      }),\n      placeholder: \"Email\"\n    }),\n    rules: {\n      required: {\n        value: true,\n        message: 'Please Type An Email'\n      },\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: 'invalid email address'\n      }\n    },\n    name: \"email\",\n    register: register,\n    setValue: setValue\n  }), errors.email && errors.email.message), __jsx(_Form.Item, null, __jsx(RHFInput, {\n    as: __jsx(_Input.Password, {\n      prefix: __jsx(_Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        }\n      }),\n      type: \"password\",\n      placeholder: \"Password\"\n    }),\n    rules: {\n      required: {\n        value: true,\n        message: 'Please Type An Password'\n      },\n      minLength: {\n        value: 6,\n        message: 'too short'\n      }\n    },\n    name: \"password\",\n    register: register,\n    setValue: setValue\n  }), errors.password && errors.password.message), __jsx(_Form.Item, null, __jsx(\"div\", {\n    className: \" flex justify-between\"\n  }, __jsx(_Checkbox, null, \"Remember me\"), __jsx(\"a\", {\n    className: \"login-form-forgot\",\n    href: \"\"\n  }, \"Forgot password\")), __jsx(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \" w-full btn-soundClound\",\n    loading: loading\n  }, \"Register\"), \"Or\", ' ', __jsx(Login, null))));\n}","map":null,"metadata":{},"sourceType":"module"}