{"ast":null,"code":"import \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/checkbox/style/css\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport \"antd/lib/form/style/css\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/icon/style/css\";\nimport _Icon from \"antd/lib/icon\";\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\WebstormProjects\\\\nextjs\\\\SoundCloudClone\\\\src\\\\components\\\\Common\\\\Register.modal.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { RHFInput } from 'react-hook-form-input';\nimport { useRegisterAccount } from '../../hooks/user/useRegisterAccount';\nimport Login from './Login';\nexport default function RegisterModal() {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setValue,\n    reset\n  } = useForm();\n  const {\n    loading,\n    registerAccount\n  } = useRegisterAccount();\n\n  const onSubmit = data => {\n    registerAccount(data);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(_Form, {\n    onSubmit: handleSubmit(onSubmit),\n    className: \" p-4 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(_Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(RHFInput, {\n    as: __jsx(_Input, {\n      prefix: __jsx(_Icon, {\n        type: \"name\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }),\n      placeholder: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }),\n    rules: {\n      required: 'Your name is required'\n    },\n    name: \"name\",\n    register: register,\n    setValue: setValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), errors.name && errors.name.message), __jsx(_Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(RHFInput, {\n    as: __jsx(_Input, {\n      prefix: __jsx(_Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }),\n    rules: {\n      required: 'Your Username is required'\n    },\n    name: \"username\",\n    register: register,\n    setValue: setValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), errors.username && errors.username.message), __jsx(_Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(RHFInput, {\n    as: __jsx(_Input, {\n      prefix: __jsx(_Icon, {\n        type: \"email\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }),\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }),\n    rules: {\n      required: {\n        value: true,\n        message: 'Please Type An Email'\n      },\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: 'invalid email address'\n      }\n    },\n    name: \"email\",\n    register: register,\n    setValue: setValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), errors.email && errors.email.message), __jsx(_Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(RHFInput, {\n    as: __jsx(_Input.Password, {\n      prefix: __jsx(_Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }),\n    rules: {\n      required: {\n        value: true,\n        message: 'Please Type An Password'\n      },\n      minLength: {\n        value: 6,\n        message: 'too short'\n      }\n    },\n    name: \"password\",\n    register: register,\n    setValue: setValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), errors.password && errors.password.message), __jsx(_Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \" flex justify-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, __jsx(_Checkbox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Remember me\"), __jsx(\"a\", {\n    className: \"login-form-forgot\",\n    href: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Forgot password\")), __jsx(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \" w-full btn-soundClound\",\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Register\"), \"Or\", ' ', __jsx(Login, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["C:/Users/PC/WebstormProjects/nextjs/SoundCloudClone/src/components/Common/Register.modal.js"],"names":["React","useForm","RHFInput","useRegisterAccount","Login","RegisterModal","register","handleSubmit","errors","setValue","reset","loading","registerAccount","onSubmit","data","color","required","name","message","username","value","pattern","email","minLength","password"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport {\n  Form, Icon, Input, Button, Checkbox,\n} from 'antd';\nimport { RHFInput } from 'react-hook-form-input';\nimport { useRegisterAccount } from '../../hooks/user/useRegisterAccount';\nimport Login from './Login';\n\nexport default function RegisterModal() {\n  const {\n    register, handleSubmit, errors, setValue, reset,\n  } = useForm();\n  const { loading, registerAccount } = useRegisterAccount();\n\n  const onSubmit = (data) => {\n    registerAccount(data);\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit(onSubmit)} className=\" p-4 \">\n        <Form.Item>\n          <RHFInput\n            as={(\n              <Input\n                prefix={\n                  <Icon type=\"name\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                }\n                placeholder=\"Name\"\n              />\n            )}\n            rules={{ required: 'Your name is required' }}\n            name=\"name\"\n            register={register}\n            setValue={setValue}\n          />\n          {errors.name && errors.name.message}\n        </Form.Item>\n\n        <Form.Item>\n          <RHFInput\n            as={(\n              <Input\n                prefix={\n                  <Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                }\n                placeholder=\"Username\"\n              />\n            )}\n            rules={{ required: 'Your Username is required' }}\n            name=\"username\"\n            register={register}\n            setValue={setValue}\n          />\n          {errors.username && errors.username.message}\n        </Form.Item>\n\n        <Form.Item>\n          <RHFInput\n            as={(\n              <Input\n                prefix={\n                  <Icon type=\"email\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                }\n                placeholder=\"Email\"\n              />\n            )}\n            rules={{\n              required: { value: true, message: 'Please Type An Email' },\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                message: 'invalid email address',\n              },\n            }}\n            name=\"email\"\n            register={register}\n            setValue={setValue}\n          />\n          {errors.email && errors.email.message}\n        </Form.Item>\n        <Form.Item>\n          <RHFInput\n            as={(\n              <Input.Password\n                prefix={\n                  <Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                }\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            )}\n            rules={{\n              required: { value: true, message: 'Please Type An Password' },\n              minLength: {\n                value: 6,\n                message: 'too short',\n              },\n            }}\n            name=\"password\"\n            register={register}\n            setValue={setValue}\n          />\n          {errors.password && errors.password.message}\n        </Form.Item>\n        <Form.Item>\n          <div className=\" flex justify-between\">\n            <Checkbox>Remember me</Checkbox>\n            <a className=\"login-form-forgot\" href=\"\">\n              Forgot password\n            </a>\n          </div>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\" w-full btn-soundClound\"\n            loading={loading}\n          >\n            Register\n          </Button>\n          Or\n          {' '}\n          <Login />\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}